float와 double은 기본적으로 과학 또는 엔지니어링 관련 계산에 쓰일 목적으로 설계된 자료형이다.
이 자료형 들은 이진부동 소수점 연산을 수행하는데, 이것은 넓은 볌위의 값에 대해 정확도가 높은 근사치를 제공할 수 있도록 설계된 연산이다.
하지만 장확한 결과를 제공하지는 않기 때문에 정확한 결과가 필요한 곳에는 사용하면 안된다.
float와 double은 특히 돈과 관계된 계산에는 적합하지 않다.

돈 계산을 할 때는 BigDecimal,int 또는 long을 사용한다는 원칙을 지켜야한다.

public static void main(String[] args){
	final BigDecimal TEN_CENTS = new BigDecimal(".10");

	int itemsBought = 0;
	BigDecimal funds = new BigDecimal("1.00");
	for(BigDecimal price = TEN_CENTS; funds.compareTo(price) <= 0; price = price.add(TEN_CENTS)){
		funds = funds.subtrace(price);
		itemsBought++;
	}
}

하지만 BigDecimal을 쓰는 방법에는 두가지 문제가 있다. 기본 산술연산 자료형(primitive arithmetic type)보다 사용이 불편하며, 느리다....
BigDecimal의 대안은 int나 long를 사용하는 것이다. 둘 중 어떤 자료형을 쓸것이냐는 수의크기, 그리고 소수점 이하 몇자리까지 표현하냐에 따라 결정

요약하자면, 정확한 답을 요구하는 문제는 float double 사용금지
성능이 중요하고 소수점 아래 수를 직접 관리해도 상관없으며 계산할 수가 심하게 크지 않을때는 int나 long 를 쓰라.
관계된 수치들이 십진수 아홉개 이하로 표현 가능할때는 int
18개 이하로 표현 가능할 때는 long를 쓰라. 그이상일 때는 BigDecimal을 써라.
